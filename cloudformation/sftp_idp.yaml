---
# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.

# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

"AWSTemplateFormatVersion": "2010-09-09"

Parameters:
  PublicBucket:
    Description: S3 bucket for SFTP user home directories
    Type: String

  SubscribedBucket:
    Description: S3 bucket for shared usage across users
    Type: String

"Outputs":
  "StackArn":
    "Value":
      "Ref": "AWS::StackId"
  TransferIdentityProviderInvocationRole:
    "Description": "IAM Role to pass to transfer createServer call as part of optional IdentityProviderDetails"
    "Value":
      "Fn::Sub": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${TransferIdentityProviderRole}"
  TransferIdentityProviderUrl:
    "Description": "URL to pass to transfer createServer call as part of optional IdentityProviderDetails"
    "Value":
      "Fn::Join":
      - ""
      - - "https://"
        - "Ref": "CustomIdentityProviderApi"
        - ".execute-api."
        - "Ref": "AWS::Region"
        - ".amazonaws.com/"
        - "Ref": "ApiStage"
  LambdaName:
    Description: Name of the Lambda function handling AuthN and AuthZ
    Value: !Ref GetUserConfigLambda

"Resources":
  "ApiCloudWatchLogsRole":
    "Type": "AWS::IAM::Role"
    "Properties":
      "AssumeRolePolicyDocument":
        "Statement":
        - "Action":
          - "sts:AssumeRole"
          "Effect": "Allow"
          "Principal":
            "Service":
            - "apigateway.amazonaws.com"
        "Version": "2012-10-17"
      "Policies":
      - "PolicyDocument":
          "Statement":
          - "Action":
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:DescribeLogGroups"
            - "logs:DescribeLogStreams"
            - "logs:PutLogEvents"
            - "logs:GetLogEvents"
            - "logs:FilterLogEvents"
            "Effect": "Allow"
            "Resource": "*"
          "Version": "2012-10-17"
        "PolicyName": "ApiGatewayLogsPolicy"

  "ApiDeployment":
    "Type": "AWS::ApiGateway::Deployment"
    "DependsOn":
    - "GetUserConfigRequest"
    "Properties":
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"
      "StageName": "dummystagefordeployment"

  "ApiLoggingAccount":
    "Type": "AWS::ApiGateway::Account"
    "Properties":
      "CloudWatchRoleArn":
        "Fn::GetAtt": "ApiCloudWatchLogsRole.Arn"

  "ApiStage":
    "Type": "AWS::ApiGateway::Stage"
    "DependsOn":
    - "ApiLoggingAccount"
    "Properties":
      "DeploymentId":
        "Ref": "ApiDeployment"
      "MethodSettings":
      - "DataTraceEnabled": !!bool "true"
        "HttpMethod": "*"
        "LoggingLevel": "INFO"
        "ResourcePath": "/*"
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"
      "StageName": "prod"

  "CustomIdentityProviderApi":
    "Type": "AWS::ApiGateway::RestApi"
    "Properties":
      "Description": "API used for Greeting requests"
      "FailOnWarnings": !!bool "true"
      "Name": "Transfer Bring Your Own Auth template API"

  TransferUserRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - transfer.amazonaws.com
            Action: 
              - "sts:AssumeRole"
      Policies:
        - 
         PolicyName: "root"
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
              - 
                Effect: "Allow"
                Action: "s3:*"
                Resource: "*"

  "GetUserConfigLambda":
    "Type": "AWS::Lambda::Function"
    "Properties":
      Code: ../src/authorizor
      "Description": "A function to provide IAM roles and policies for given user and serverId."
      "Handler": lambda.handler
      "Role":
        "Fn::GetAtt": "LambdaExecutionRole.Arn"
      "Runtime": "nodejs12.13.0"
      Environment:
        Variables:
          PUBLIC_BUCKET: !Ref PublicBucket
          SUBSCRIBE_BUCKET: !Ref SubscribedBucket
          USER_ROLE: 
            !GetAtt "TransferUserRole.Arn"

  "GetUserConfigLambdaPermission":
    "Type": "AWS::Lambda::Permission"
    "Properties":
      "Action": "lambda:invokeFunction"
      "FunctionName":
        "Fn::GetAtt": "GetUserConfigLambda.Arn"
      "Principal": "apigateway.amazonaws.com"
      "SourceArn":
        "Fn::Join":
        - ""
        - - "arn:aws:execute-api:"
          - "Ref": "AWS::Region"
          - ":"
          - "Ref": "AWS::AccountId"
          - ":"
          - "Ref": "CustomIdentityProviderApi"
          - "/*"

  "GetUserConfigRequest":
    "Type": "AWS::ApiGateway::Method"
    "DependsOn": "GetUserConfigLambdaPermission"
    "Properties":
      "AuthorizationType": "AWS_IAM"
      "HttpMethod": "GET"
      "Integration":
        "IntegrationHttpMethod": "POST"
        "IntegrationResponses":
        - "StatusCode": "200"
        "RequestTemplates":
          "application/json": "{\n  \"username\": \"$input.params('username')\",\n  \"password\": \"$input.params('Password')\",\n  \"serverId\": \"$input.params('serverId')\"\n}\n"
        "Type": "AWS"
        "Uri":
          "Fn::Join":
          - ""
          - - "arn:aws:apigateway:"
            - "Ref": "AWS::Region"
            - ":lambda:path/2015-03-31/functions/"
            - "Fn::GetAtt":
              - "GetUserConfigLambda"
              - "Arn"
            - "/invocations"
      "MethodResponses":
      - "ResponseModels":
          "application/json": "UserConfigResponseModel"
        "StatusCode": "200"
      "RequestParameters":
        "method.request.header.Password": !!bool "false"
        "method.request.querystring.serverId": !!bool "true"
        "method.request.querystring.username": !!bool "true"
      "ResourceId":
        "Ref": "GetUserConfigResource"
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"

  "GetUserConfigResource":
    "Type": "AWS::ApiGateway::Resource"
    "Properties":
      "ParentId":
        "Ref": "UserNameResource"
      "PathPart": "config"
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"

  "GetUserConfigResponseModel":
    "Type": "AWS::ApiGateway::Model"
    "Properties":
      "ContentType": "application/json"
      "Description": "API reponse for GetUserConfig"
      "Name": "UserConfigResponseModel"
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"
      "Schema":
        "$schema": "http://json-schema.org/draft-04/schema#"
        "properties":
          "HomeDirectory":
            "type": "string"
          "Policy":
            "type": "string"
          "PublicKeys":
            "items":
              "type": "string"
            "type": "array"
          "Role":
            "type": "string"
        "title": "UserUserConfig"
        "type": "object"

  "LambdaExecutionRole":
    "Type": "AWS::IAM::Role"
    "Properties":
      "AssumeRolePolicyDocument":
        "Statement":
        - "Action":
          - "sts:AssumeRole"
          "Effect": "Allow"
          "Principal":
            "Service":
            - "lambda.amazonaws.com"
        "Version": "2012-10-17"
      "ManagedPolicyArns":
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  "ServerIdResource":
    "Type": "AWS::ApiGateway::Resource"
    "Properties":
      "ParentId":
        "Ref": "ServersResource"
      "PathPart": "{serverId}"
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"

  "ServersResource":
    "Type": "AWS::ApiGateway::Resource"
    "Properties":
      "ParentId":
        "Fn::GetAtt":
        - "CustomIdentityProviderApi"
        - "RootResourceId"
      "PathPart": "servers"
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"

  "TransferIdentityProviderRole":
    "Type": "AWS::IAM::Role"
    "Properties":
      "AssumeRolePolicyDocument":
        "Statement":
        - "Action":
          - "sts:AssumeRole"
          "Effect": "Allow"
          "Principal":
            "Service": "transfer.amazonaws.com"
        "Version": "2012-10-17"
      "Policies":
      - "PolicyDocument":
          "Statement":
          - "Action":
            - "execute-api:Invoke"
            "Effect": "Allow"
            "Resource":
              "Fn::Sub": "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${CustomIdentityProviderApi}/prod/GET/*"
          "Version": "2012-10-17"
        "PolicyName": "TransferCanInvokeThisApi"
      - "PolicyDocument":
          "Statement":
          - "Action":
            - "apigateway:GET"
            "Effect": "Allow"
            "Resource": "*"
          "Version": "2012-10-17"
        "PolicyName": "TransferCanReadThisApi"

  "UserNameResource":
    "Type": "AWS::ApiGateway::Resource"
    "Properties":
      "ParentId":
        "Ref": "UsersResource"
      "PathPart": "{username}"
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"

  "UsersResource":
    "Type": "AWS::ApiGateway::Resource"
    "Properties":
      "ParentId":
        "Ref": "ServerIdResource"
      "PathPart": "users"
      "RestApiId":
        "Ref": "CustomIdentityProviderApi"
...
